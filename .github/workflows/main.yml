name: Build FIPS-Compliant OpenSSL
run-name: builder
on: [push]

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Download NASM Installer
        shell: powershell
        run: |
          Invoke-WebRequest -Uri "https://www.nasm.us/pub/nasm/releasebuilds/2.16.03/win64/nasm-2.16.03-installer-x64.exe" -OutFile "nasm-installer.exe"
          echo "Downloaded NASM installer"

      - name: Install NASM Manually
        shell: cmd
        run: |
          start /wait nasm-installer.exe /S
          echo "NASM installed successfully"

      - name: Add NASM to PATH
        shell: cmd
        run: |
          setx PATH "%PATH%;C:\Program Files\NASM"
          set PATH=%PATH%;C:\Program Files\NASM
          echo %PATH%
          where nasm || echo "NASM not found"
          nasm -v

      - name: Download & Extract OpenSSL
        shell: powershell
        run: |
          Invoke-WebRequest -Uri "https://www.openssl.org/source/openssl-3.0.8.tar.gz" -OutFile "openssl-3.0.8.tar.gz"
          tar -xf openssl-3.0.8.tar.gz
          echo "Extracted OpenSSL"

      - name: Build OpenSSL 3 with FIPS Mode
        shell: cmd
        run: |
          cd openssl-3.0.8
          "C:\Program Files\NASM\nasm.exe" -v
          perl Configure VC-WIN64A enable-fips
          nmake
          nmake install
          echo "OpenSSL Build Completed"

      - name: Verify OpenSSL Installation
        shell: cmd
        run: openssl version -a

      # -----------------------------------------------
      # 3️⃣ Build Python with OpenSSL FIPS Mode
      # -----------------------------------------------
      - name: Download Python Source
        shell: powershell
        run: |
          Invoke-WebRequest -Uri "https://www.python.org/ftp/python/3.11.5/Python-3.11.5.tgz" -OutFile "Python-3.11.5.tgz"
          tar -xf Python-3.11.5.tgz
          echo "Extracted Python Source"

      - name: Build Python with FIPS OpenSSL
        shell: cmd
        run: |
          cd Python-3.11.5
          for /d %%X in ("C:\Program Files\Microsoft Visual Studio\2022\*") do set VS_PATH=%%X
          call "%VS_PATH%\VC\Auxiliary\Build\vcvars64.bat"
          PCbuild\build.bat -e -p x64 --openssl-dir="C:\Program Files\OpenSSL"

      - name: Verify Python Build Uses FIPS OpenSSL
        shell: cmd
        run: |
          python -c "import ssl; print(ssl.OPENSSL_VERSION)"
          python -c "import ssl; print(ssl.FIPS_mode())"

      # -----------------------------------------------
      # 4️⃣ Create Standalone Executable with PyInstaller
      # -----------------------------------------------
      - name: Install PyInstaller
        shell: cmd
        run: python -m pip install pyinstaller

      - name: Build Executable
        shell: cmd
        run: pyinstaller --onefile my_script.py

      - name: Upload Executable
        uses: actions/upload-artifact@v3
        with:
          name: fips-python-executable
          path: dist/my_script.exe

